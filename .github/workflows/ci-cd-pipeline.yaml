name: Deploy Application Docker Image to AWS ECS Cluster

on:
  push:
    branches: [main]

jobs:
  format-check:
    name: Check Code Formatting with Black
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Black
        run: pip install black

      - name: Run Black check
        run: black --check --verbose .

  test:
    name: Run API Route Tests
    needs: format-check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          pip install --no-cache-dir -r mizzle_mate/requirements.txt

      - name: Run Tests
        env:
          PYTHONPATH: .
        run: pytest -v mizzle_mate/tests/test_api.py

  Continuous-Integration:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .  
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  Continuous-Deployment:
    name: Deploy to AWS ECS
    needs: Continuous-Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update ECS Task Definition
        id: update-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          container-name: mizzlle_mate_app
          image: ${{ secrets.LATEST_IMAGE_URI }}

      - name: Deploy to Amazon ECS Service
        id: deploy-ecs
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: mizzle-mate-app-task-service
          cluster: generativeai-model
          task-definition: ${{ steps.update-task-definition.outputs.task-definition }}
          wait-for-service-stability: true